# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import A2_pb2 as A2__pb2


class RegisterServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetReadQuorumReplicas = channel.unary_unary(
                '/RegisterServer/GetReadQuorumReplicas',
                request_serializer=A2__pb2.Empty.SerializeToString,
                response_deserializer=A2__pb2.ReplicasList.FromString,
                )
        self.GetReplicas = channel.unary_unary(
                '/RegisterServer/GetReplicas',
                request_serializer=A2__pb2.Empty.SerializeToString,
                response_deserializer=A2__pb2.ReplicasList.FromString,
                )
        self.GetWriteQuorumReplicas = channel.unary_unary(
                '/RegisterServer/GetWriteQuorumReplicas',
                request_serializer=A2__pb2.Empty.SerializeToString,
                response_deserializer=A2__pb2.ReplicasList.FromString,
                )
        self.RegisterReplica = channel.unary_unary(
                '/RegisterServer/RegisterReplica',
                request_serializer=A2__pb2.ReplicaInfo.SerializeToString,
                response_deserializer=A2__pb2.Response.FromString,
                )


class RegisterServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetReadQuorumReplicas(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReplicas(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWriteQuorumReplicas(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterReplica(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RegisterServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetReadQuorumReplicas': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReadQuorumReplicas,
                    request_deserializer=A2__pb2.Empty.FromString,
                    response_serializer=A2__pb2.ReplicasList.SerializeToString,
            ),
            'GetReplicas': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReplicas,
                    request_deserializer=A2__pb2.Empty.FromString,
                    response_serializer=A2__pb2.ReplicasList.SerializeToString,
            ),
            'GetWriteQuorumReplicas': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWriteQuorumReplicas,
                    request_deserializer=A2__pb2.Empty.FromString,
                    response_serializer=A2__pb2.ReplicasList.SerializeToString,
            ),
            'RegisterReplica': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterReplica,
                    request_deserializer=A2__pb2.ReplicaInfo.FromString,
                    response_serializer=A2__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'RegisterServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RegisterServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetReadQuorumReplicas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RegisterServer/GetReadQuorumReplicas',
            A2__pb2.Empty.SerializeToString,
            A2__pb2.ReplicasList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReplicas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RegisterServer/GetReplicas',
            A2__pb2.Empty.SerializeToString,
            A2__pb2.ReplicasList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetWriteQuorumReplicas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RegisterServer/GetWriteQuorumReplicas',
            A2__pb2.Empty.SerializeToString,
            A2__pb2.ReplicasList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterReplica(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RegisterServer/RegisterReplica',
            A2__pb2.ReplicaInfo.SerializeToString,
            A2__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ReplicaStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ShareInfo = channel.unary_unary(
                '/Replica/ShareInfo',
                request_serializer=A2__pb2.ReplicaInfo.SerializeToString,
                response_deserializer=A2__pb2.Response.FromString,
                )
        self.Read = channel.unary_unary(
                '/Replica/Read',
                request_serializer=A2__pb2.ReadRequest.SerializeToString,
                response_deserializer=A2__pb2.ReadResponse.FromString,
                )
        self.Write = channel.unary_unary(
                '/Replica/Write',
                request_serializer=A2__pb2.WriteRequest.SerializeToString,
                response_deserializer=A2__pb2.WriteResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/Replica/Delete',
                request_serializer=A2__pb2.DeleteRequest.SerializeToString,
                response_deserializer=A2__pb2.DeleteResponse.FromString,
                )


class ReplicaServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ShareInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Read(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Write(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ReplicaServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ShareInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.ShareInfo,
                    request_deserializer=A2__pb2.ReplicaInfo.FromString,
                    response_serializer=A2__pb2.Response.SerializeToString,
            ),
            'Read': grpc.unary_unary_rpc_method_handler(
                    servicer.Read,
                    request_deserializer=A2__pb2.ReadRequest.FromString,
                    response_serializer=A2__pb2.ReadResponse.SerializeToString,
            ),
            'Write': grpc.unary_unary_rpc_method_handler(
                    servicer.Write,
                    request_deserializer=A2__pb2.WriteRequest.FromString,
                    response_serializer=A2__pb2.WriteResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=A2__pb2.DeleteRequest.FromString,
                    response_serializer=A2__pb2.DeleteResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Replica', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Replica(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ShareInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Replica/ShareInfo',
            A2__pb2.ReplicaInfo.SerializeToString,
            A2__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Read(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Replica/Read',
            A2__pb2.ReadRequest.SerializeToString,
            A2__pb2.ReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Write(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Replica/Write',
            A2__pb2.WriteRequest.SerializeToString,
            A2__pb2.WriteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Replica/Delete',
            A2__pb2.DeleteRequest.SerializeToString,
            A2__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
